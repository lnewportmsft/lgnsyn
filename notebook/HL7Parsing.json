{
	"name": "HL7Parsing",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "lgnsynspark32",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "20651dcc-a0cf-4b40-8001-e7fd717fe202"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/65c04546-fce4-4b3c-be44-dac0e5324e24/resourceGroups/lgnsynapse/providers/Microsoft.Synapse/workspaces/lgnsynapse/bigDataPools/lgnsynspark32",
				"name": "lgnsynspark32",
				"type": "Spark",
				"endpoint": "https://lgnsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/lgnsynspark32",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"source": [
					"# How to process HL7 2.x messages stored in SQL Server using Python\n",
					"\n",
					"Sample HL7 message:\n",
					"\n",
					"\n",
					"MSH|^~\\&|HIS|MedCenter|LIS|MedCenter|20060307110114||ORM^O01|MSGID20060307110114|P|2.3<br>\n",
					"PID|||12001||Jones^John^^^Mr.||19670824|M|||123 West St.^^Denver^CO^80020^USA|||||||<br>\n",
					"PV1||O|OP^PAREG^||||2342^Jones^Bob|||OP|||||||||2|||||||||||||||||||||||||20060307110111|<br>\n",
					"ORC|NW|20060307110114<br>\n",
					"OBR|1|20060307110114||003038^Urinalysis^L|||20060307110114"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"import pandas as pd\n",
					"import pyodbc\n",
					"\n",
					"sql_conn = pyodbc.connect('DRIVER={ODBC Driver 13 for SQL Server};SERVER=localhost;DATABASE=Training;Trusted_Connection=yes')"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"source": [
					"query = \"SELECT * FROM HL7Messages\"\n",
					"\n",
					"df = pd.read_sql(query, sql_conn)"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"source": [
					"df"
				],
				"execution_count": 3
			},
			{
				"cell_type": "markdown",
				"source": [
					"Python HL7 processing package:\n",
					"\n",
					"https://python-hl7.readthedocs.io/en/latest/"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"import hl7"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"source": [
					"for index, row in df.iterrows():\n",
					"    h = hl7.parse(row['HL7Message'])\n",
					"    print(\"Message type: {}, Patient ID: {}\".format(h.segment('MSH')[9], h.segment('PID')[3]))"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}