{
	"name": "rana_data_profiling",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "lgnsynspark32",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "9d424378-1636-4138-a7d6-75f02ad3f877"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/65c04546-fce4-4b3c-be44-dac0e5324e24/resourceGroups/lgnsynapse/providers/Microsoft.Synapse/workspaces/lgnsynapse/bigDataPools/lgnsynspark32",
				"name": "lgnsynspark32",
				"type": "Spark",
				"endpoint": "https://lgnsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/lgnsynspark32",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://openhack6srvfilesystem@openhack6srvdatalake.dfs.core.windows.net/cloudsales/RAW/orderdetails/dbo.OrderDetails.parquet', format='parquet')\r\n",
					"#display(df.limit(10))\r\n",
					"df.createOrReplaceTempView('vw_OrderDetails')"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://openhack6srvfilesystem@openhack6srvdatalake.dfs.core.windows.net/cloudsales/RAW/Orders/dbo.Orders.parquet', format='parquet')\r\n",
					"#display(df.limit(10))\r\n",
					"df.createOrReplaceTempView('vw_Orders')"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"--select count(distinct OrderID) from vw_OrderDetails\r\n",
					"select count(distinct OrderID) from vw_Orders"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select count(*) from vw_OrderDetails a join vw_Orders b on a.orderId = b.orderId"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://openhack6srvfilesystem@openhack6srvdatalake.dfs.core.windows.net/curated/dvdsales/part-00000-2b2d45bf-5014-40e5-ad6f-37223c33ffe1-c000.snappy.parquet', format='parquet')\r\n",
					"df.count()"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"create database southridget6db"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"create table southridget6db.dvdsales\r\n",
					"  USING DELTA\r\n",
					"  LOCATION 'abfss://openhack6srvfilesystem@openhack6srvdatalake.dfs.core.windows.net/curated/dvdsales'"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"select * from southridget6db.dvdsales limit 10;"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://openhack6srvfilesystem@openhack6srvdatalake.dfs.core.windows.net/cloudsales/RAW/Customers/dbo.Customers.parquet', format='parquet')\r\n",
					"df.printSchema()\r\n",
					"#display(df.limit(10))\r\n",
					"#df.createOrReplaceTempView('vw_cloudsales_customers')"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://openhack6srvfilesystem@openhack6srvdatalake.dfs.core.windows.net/cloudstreaming/RAW/dboCustomers.parquet', format='parquet')\r\n",
					"df.printSchema()\r\n",
					"#display(df.limit(10))\r\n",
					"#df.createOrReplaceTempView('vw_cloudstreaming_customers')"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"--select * from vw_cloudsales_customers\r\n",
					"select * from vw_cloudstreaming_customers"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://openhack6srvfilesystem@openhack6srvdatalake.dfs.core.windows.net/fourthcoffee/RAW/Customers.csv', format='csv', header=True)\r\n",
					"df.printSchema()\r\n",
					"#display(df.limit(10))\r\n",
					"df.createOrReplaceTempView('vw_fourthcoffee_customers')"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://openhack6srvfilesystem@openhack6srvdatalake.dfs.core.windows.net/vanarsdel/RAW/dboCustomers.parquet', format='parquet')\r\n",
					"df.printSchema()\r\n",
					"#display(df.limit(10))\r\n",
					"df.createOrReplaceTempView('vw_vanarsdel_customers')"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"--select  customerID, count(*) from southridget6db.customers group by 1 having count(*)>1\r\n",
					"--select * from southridget6db.customers where customerID = '6b1d5569-c5a6-499e-8297-cb494bdc2dff'\r\n",
					"\r\n",
					"    describe extended southridget6db.customers"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"--unit tests\r\n",
					"select * from southridget6db.customers\r\n",
					"where \r\n",
					"LastName is null Or\r\n",
					"FirstName is null OR\r\n",
					"AddressLine1 is null OR\r\n",
					"City is null OR\r\n",
					"State is null OR\r\n",
					"ZipCode is null OR\r\n",
					"PhoneNumber is null"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}